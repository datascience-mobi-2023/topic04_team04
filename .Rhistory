geom_line(data = f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Median temperature")
plot_median_dengue = ggplot2::ggplot() +
geom_line(data = f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp, nrow = 2)
knitr::opts_chunk$set(echo = TRUE)
install.packages("readxl")
install.packages("ggplot2")
install.packages("scales")
library(readxl)
library(readxl)
library(dplyr)
Endung <- "_dengue_extracted.xlsx"
Anfang <- "Dengue"
for (i in 2006:2020) {
Dateiname <- paste0(i, Endung) #erstellen das Dateinamens
Name_df <- paste0(Anfang, i)
assign(Name_df, read_excel(Dateiname)) #erstellen der Variable und zuweisen der Excel-Tabelle
df_dengue <- get(Name_df)
vec_data_names <- vector("character")
vec_data_names <- sapply(df_dengue$Reporting_areas, function(g) {
paste(g[1], i)
})
data_names <- matrix(vec_data_names,nrow = 77, ncol = 1)
df_dengue <- cbind(data_names, df_dengue)
assign(Name_df,df_dengue)
}
total_years = data.frame()
for (i in 2006:2020){
a = get(paste0("Dengue",i))
total_years = rbind(total_years, a)
}
m = 1
data_total = data.frame(col1 = character(0), col2 = character(0), col3 = numeric(0), month = character(0))
colnames(data_total) = c("data_names", "Reporting_areas", "dengue_cases", "month")
sorted_total_years = total_years[order(total_years$"Reporting_areas"),]
for (k in 1:1155){
for (j in 3:14){
square <- sorted_total_years[k, c(1, 2, j)]
month = colnames(square[3])
square <- cbind(square,month)
colnames(square) = c("data_names", "Reporting_areas", "dengue_cases", "month")
data_total <- rbind(data_total, square)
colnames(data_total) = c("data_names", "Reporting_areas", "dengue_cases", "month")
data_total[m,1] = paste(data_total[m,1], month[1])
m = m + 1
}
}
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl")
#install.packages("ggplot2")
#install.packages("scales")
library(readxl)
library(readxl)
library(dplyr)
Endung <- "_dengue_extracted.xlsx"
Anfang <- "Dengue"
for (i in 2006:2020) {
Dateiname <- paste0(i, Endung) #erstellen das Dateinamens
Name_df <- paste0(Anfang, i)
assign(Name_df, read_excel(Dateiname)) #erstellen der Variable und zuweisen der Excel-Tabelle
df_dengue <- get(Name_df)
vec_data_names <- vector("character")
vec_data_names <- sapply(df_dengue$Reporting_areas, function(g) {
paste(g[1], i)
})
data_names <- matrix(vec_data_names,nrow = 77, ncol = 1)
df_dengue <- cbind(data_names, df_dengue)
assign(Name_df,df_dengue)
}
total_years = data.frame()
for (i in 2006:2020){
a = get(paste0("Dengue",i))
total_years = rbind(total_years, a)
}
m = 1
data_total = data.frame(col1 = character(0), col2 = character(0), col3 = numeric(0), month = character(0))
colnames(data_total) = c("data_names", "Reporting_areas", "dengue_cases", "month")
sorted_total_years = total_years[order(total_years$"Reporting_areas"),]
for (k in 1:1155){
for (j in 3:14){
square <- sorted_total_years[k, c(1, 2, j)]
month = colnames(square[3])
square <- cbind(square,month)
colnames(square) = c("data_names", "Reporting_areas", "dengue_cases", "month")
data_total <- rbind(data_total, square)
colnames(data_total) = c("data_names", "Reporting_areas", "dengue_cases", "month")
data_total[m,1] = paste(data_total[m,1], month[1])
m = m + 1
}
}
m = 1
temp_data = read_excel("era5_data_2006_2020_thailand_monmean.xlsx")
temp_data = as.data.frame(temp_data)
temp_data_sorted = data.frame( col1 = numeric(0), Longitude = numeric(0), Latitude = numeric(0))
for (i in 1:77) {
for (j in 5:184) {
temp_data_sorted[m,1] = temp_data[i,j]
temp_data_sorted[m,2] = temp_data[i,3]
temp_data_sorted[m,3] = temp_data[i,4]
m = m + 1
}
}
data_total = cbind(data_total_dengue, temp_data_sorted)
colnames(data_total)[5] = "temperature"
library(readxl)
Endung <- "_population.xlsx"
#empty dataframe for the data
total_population = data.frame(Reporting_areas = character(), population_count = numeric())
# stack years of 2006-2011 below each other
for (i in 2006:2011) {
population_df  = data.frame()
Dateiname <- paste0(i, Endung) #erstellen das Dateinamens
population_df = read_excel(Dateiname) #erstellen der Variable und zuweisen der Excel-Tabelle
vec_years = rep(i, times = 77)
population_df = cbind(population_df,vec_years)
names(population_df) = c("Reporting_areas", "population_count", "year")
# multiply every row 12 times for each month
repeat_count <- 12
population_df_replicated <- population_df[rep(row.names(population_df), each = repeat_count), ]
row.names(population_df_replicated) <- NULL
#put all the years together
total_population = rbind(total_population, population_df_replicated)
}
# stack years of 2012-2020 below each other and add to data_total
population_df = read_excel("2012-2020_population.xlsx")
colnames(population_df) = c("Reporting_areas", "population_count", "population_count", "population_count", "population_count", "population_count","population_count","population_count","population_count","population_count")
pop_placeholder = data.frame(Reporting_areas = character(), population_count = numeric(), year = numeric())
col_num = 2
for (i in 2012:2020) {
year = rep(i, times = 77)
pop_placeholder = rbind(pop_placeholder, cbind(population_df[,c(1,col_num)],year))
names(pop_placeholder) = c("Reporting_areas", "population_count", "year")
col_num = col_num + 1
}
# multiply every row 12 times for each month
repeat_count <- 12
population_df_replicated <- pop_placeholder[rep(row.names(pop_placeholder), each = repeat_count), ]
row.names(population_df_replicated) <- NULL
# combine all population data in each
total_population = rbind(total_population, population_df_replicated)
sorted_total_population = total_population[order(total_population$"Reporting_areas"),]
data_total = cbind(data_total,sorted_total_population[,c(2,3)])
row.names(data_total) = NULL
first_date = as.Date("2006-01-01")
last_date = as.Date("2020-12-31")
time_column_short = seq(first_date, last_date, by = "month")
time_column_short = as.Date(time_column_short)
time_column = rep(time_column_short, times = 77)
data_total = cbind(data_total, time_column)
#data_total = subset(data_total, select = -time_column)
detect_na <- function(x) {
is_na <- x %in% c("N/A", "na", "NA", "n/a")
replace(x, is_na, NA)
}
data_total <- apply(data_total, 2, detect_na)
rmv.rows = apply(data_total,1,function(x){sum(is.na(x))})
data_total = as.data.frame(data_total)
num_col = c("temperature", "Longitude", "Latitude", "incidence")
int_col = c("dengue_cases","population_count","year")
data_total[int_col] = lapply(data_total[int_col], as.integer)
data_total[num_col] = lapply(data_total[num_col], as.numeric)
summary(data_total)
dimensions= dim(data_total)
R= dimensions[1]
for(Zeile in 1:R){
Population <- data_total$population_count[Zeile]
Infection <- data_total$dengue_cases[Zeile]
Incidence = (Infection/Population)*100000
data_total$incidence[Zeile] <- Incidence
}
#struture data frame and convert into right datatypes
```{r}
data_total = as.data.frame(data_total)
num_col = c("temperature", "Longitude", "Latitude", "Incidence")
int_col = c("dengue_cases","population_count","year")
data_total[int_col] = lapply(data_total[int_col], as.integer)
data_total[num_col] = lapply(data_total[num_col], as.numeric)
View(data_total)
data_total = as.data.frame(data_total)
num_col = c("temperature", "Longitude", "Latitude", "incidence")
int_col = c("dengue_cases","population_count","year")
data_total[int_col] = lapply(data_total[int_col], as.integer)
data_total[num_col] = lapply(data_total[num_col], as.numeric)
data_total = subset(data_total, select = c("data_names", "Reporting_areas", "year", "month", "time_column", "dengue_cases", "population_count", "temperature", "Longitude", "Latitude", "incidence"))
save(data_total, file = "data_total.RData")
summary(data_total)
library(ggplot2)
library(scales)
#dengue cases of whole thailand per month
f_mean_dengue = function(){
mean_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = mean(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
mean_dengue = rbind(mean_dengue, m_month)
}
return(mean_dengue)
}
f_mean_temp = function(){
mean_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = mean(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
mean_temp = rbind(mean_temp, m_month)
}
return(mean_temp)
}
plot1 = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
plot2 = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature), color = "red") +
labs(x = "time", y = "temperature") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
gridExtra::grid.arrange(plot1, plot2, nrow = 2)
f_mean_dengue()
print(f_mean_dengue())
f_mean_dengue()
mean_dengue()
mean_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
mean_dengue()
mean_dengue
f_mean_dengue()
library(ggplot2)
library(scales)
#dengue cases of whole thailand per month
f_mean_dengue = function(){
mean_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = mean(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
mean_dengue = rbind(mean_dengue, m_month)
}
return(mean_dengue)
}
f_mean_temp = function(){
mean_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = mean(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
mean_temp = rbind(mean_temp, m_month)
}
return(mean_temp)
}
plot1 = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
plot2 = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature), color = "red") +
labs(x = "time", y = "temperature") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
gridExtra::grid.arrange(plot1, plot2, nrow = 2)
#dengue cases of whole thailand per month
f_mean_dengue = function(){
mean_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = mean(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
mean_dengue = rbind(mean_dengue, m_month)
}
return(mean_dengue)
}
month = data_total[data_total$time_column == i,]
View(month)
mean(month$dengue_case, na.rm = TRUE)
mean(data_total$dengue_cases, na.rm = TRUE)
month = data_total[data_total$time_column == "Dec",]
View(month)
data_total[data_total$time_column == "Dec",]
data_total = as.data.frame(data_total)
num_col = c("temperature", "Longitude", "Latitude", "incidence")
int_col = c("dengue_cases","population_count","year")
date_col = c("time_column")
data_total[int_col] = lapply(data_total[int_col], as.integer)
data_total[num_col] = lapply(data_total[num_col], as.numeric)
data_total[date_col] = lapply(data_total[date_col], as.Date)
data_total = subset(data_total, select = c("data_names", "Reporting_areas", "year", "month", "time_column", "dengue_cases", "population_count", "temperature", "Longitude", "Latitude", "incidence"))
save(data_total, file = "data_total.RData")
summary(data_total)
library(ggplot2)
library(scales)
#dengue cases of whole thailand per month
f_mean_dengue = function(){
mean_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = mean(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
mean_dengue = rbind(mean_dengue, m_month)
}
return(mean_dengue)
}
f_mean_temp = function(){
mean_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = mean(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
mean_temp = rbind(mean_temp, m_month)
}
return(mean_temp)
}
plot1 = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
plot2 = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature), color = "red") +
labs(x = "time", y = "temperature") +
scale_x_continuous(breaks = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "2 year"))
gridExtra::grid.arrange(plot1, plot2, nrow = 2)
f_median_dengue = function(){
median_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = median(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
median_dengue = rbind(median_dengue, m_month)
}
return(median_dengue)
}
f_median_temp = function(){
median_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = median(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
median_temp = rbind(median_temp, m_month)
}
return(median_temp)
}
plot_mean_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Mean temperature")
plot_mean_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Mean dengue cases")
plot_median_temp = ggplot2::ggplot() +
geom_line(data = f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Median temperature")
plot_median_dengue = ggplot2::ggplot() +
geom_line(data = f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp, nrow = 2)
f_median_dengue = function(){
median_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = median(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
median_dengue = rbind(median_dengue, m_month)
}
return(median_dengue)
}
f_median_temp = function(){
median_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = median(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
median_temp = rbind(median_temp, m_month)
}
return(median_temp)
}
plot_mean_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Mean temperature")
plot_mean_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Mean dengue cases")
plot_median_temp = ggplot2::ggplot() +
geom_line(data = f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Median temperature")
plot_median_dengue = ggplot2::ggplot() +
geom_line(data = f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Median dengue cases")
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue() - f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp() - f_median_temp(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 2)
f_median_dengue = function(){
median_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = median(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
median_dengue = rbind(median_dengue, m_month)
}
return(median_dengue)
}
f_median_temp = function(){
median_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = median(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
median_temp = rbind(median_temp, m_month)
}
return(median_temp)
}
plot_mean_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Mean temperature")
plot_mean_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Mean dengue cases")
plot_median_temp = ggplot2::ggplot() +
geom_line(data = f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Median temperature")
plot_median_dengue = ggplot2::ggplot() +
geom_line(data = f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Median dengue cases")
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue() - f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp() - f_median_temp(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "temperature", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 2)
f_median_dengue = function(){
median_dengue <- data.frame(dengue_cases = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(dengue_cases = median(month$dengue_case, na.rm = TRUE), time_column = month$time_column[1])
median_dengue = rbind(median_dengue, m_month)
}
return(median_dengue)
}
f_median_temp = function(){
median_temp <- data.frame(temperature = numeric(), time_column = as.Date(character()))
months = seq(from = as.Date("2006-01-01"), to = as.Date("2020-12-01"), by = "month")
for (i in months) {
month = data_total[data_total$time_column == i,]
m_month = data.frame(temperature = median(month$temperature, na.rm = TRUE), time_column = month$time_column[1])
median_temp = rbind(median_temp, m_month)
}
return(median_temp)
}
plot_mean_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Mean temperature")
plot_mean_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Mean dengue cases")
plot_median_temp = ggplot2::ggplot() +
geom_line(data = f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Median temperature")
plot_median_dengue = ggplot2::ggplot() +
geom_line(data = f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Median dengue cases")
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = f_mean_dengue() - f_median_dengue(), aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = f_mean_temp() - f_median_temp(), aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 2)
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 3)
#compute difference between mean and median
dif_mm = f_mean_dengue()["dengue_cases"]-f_median_dengue()["dengue_cases"]
View(dif_mm)
#compute difference between mean and median
dif_mm = cbind(f_mean_dengue["time_column"],f_mean_dengue()["dengue_cases"]-f_median_dengue()["dengue_cases"])
#compute difference between mean and median
dif_mm = f_mean_dengue()["dengue_cases"]-f_median_dengue()["dengue_cases"]
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = dif_mm, aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = dif_mm, aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 3)
View(dif_mm)
dif_mm = cbind(dif_mm,f_mean_dengue()["time_column"])
View(dif_mm)
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = dif_mm, aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = dif_mm, aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 3)
#compute difference between mean and median
dif_mm_dengue = f_mean_dengue()["dengue_cases"]-f_median_dengue()["dengue_cases"]
dif_mm_temp = f_mean_temp()["temperature"]-f_median_temp()["temperature"]
dif_mm_temp = f_mean_temp()["temperature"]-f_median_temp()["temperature"]
dif_mm_temp = cbind(dif_mm_temp,f_mean_temp()["time_column"])
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 3)
plot_dif_dengue = ggplot2::ggplot() +
geom_line(data = dif_mm_dengue, aes(x = time_column, y = dengue_cases)) +
labs(x = "time", y = "dengue-cases", title = "Difference between mean and median dengue cases")
plot_dif_temp = ggplot2::ggplot() +
geom_line(data = dif_mm_temp, aes(x = time_column, y = temperature)) +
labs(x = "time", y = "temperature", title = "Difference between mean and median dengue cases")
gridExtra::grid.arrange(plot_mean_dengue, plot_mean_temp, plot_median_dengue, plot_median_temp,plot_dif_dengue,plot_dif_temp, nrow = 3)
